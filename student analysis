import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import streamlit as st

st.set_page_config(page_title="Placement", layout="wide")

with st.container():
  st.title("Student Performance Analysis Dashboard")
  roll_input = st.number_input("Enter Roll Number:", min_value=101, max_value=200, step=1)
  st.header("Please upload your csv file")
  upload_file = st.file_uploader("",type=['csv'])

  if upload_file is not None:
    df = pd.read_csv(upload_file)
    st.success("File uploaded successfully!")
    st.dataframe(df.head())
    marks = df[["math","science","english"]].mean(axis=1)
    maximim = marks.max()
    mean = marks.mean()
    median = marks.median()
    standard_dev = marks.std()
    st.write(f"Mean: {mean} \nMedian: {median} \nStandard Deviation: {standard_dev}")


with st.container():
  if upload_file is not None:
    col1, spacer, col2 = st.columns([3,1,3])
    st.header("Bar Chart Representation")
    col1.write("1. Average Marks")
    col1.bar_chart(marks)
    col1.write("2. Math Marks")
    col1.bar_chart(df["math"])
    col2.write("3. Science Marks")
    col2.bar_chart(df["science"])
    col2.write("4. English Marks")
    col2.bar_chart(df["english"])

with st.container():
  if upload_file is not None:
    st.header("Pie Chart Representation")
    labels = ['Math', 'Science', 'English']
    sizes = [df["math"].mean(), df["science"].mean(), df["english"].mean()]
    fig1, ax1 = plt.subplots()
    ax1.pie(sizes, labels=labels, autopct='%1.1f%%', startangle=90)
    ax1.axis('equal')
    st.pyplot(fig1)

with st.container():
  if upload_file is not None:
    if roll_input in df['rollno'].values:
      student_data = df[df['rollno'] == roll_input]
      st.header(f"Performance Analysis for Roll Number: {roll_input}")
      st.write(student_data)
      student_marks = student_data[["math","science","english"]].values.flatten()
      subjects = ['Math', 'Science', 'English']
      fig2, ax2 = plt.subplots()
      ax2.bar(subjects, student_marks, color=['blue', 'orange', 'green'])
      ax2.set_ylabel('Marks')
      ax2.set_title('Student Marks by Subject')
      st.pyplot(fig2)

with st.container():
  if upload_file is not None:
    st.header("our school top student")
    maximim = df.loc[marks.idxmax()]['name']
    st.title(f"Name : {maximim}")
